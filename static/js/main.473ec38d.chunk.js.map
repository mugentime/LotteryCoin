{"version":3,"sources":["logo.svg","web3.js","lottery.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","window","ethereum","console","error","alert","web3","Web3","currentProvider","lottery","eth","Contract","JSON","parse","App","state","manager","players","balance","value","message","price","numerodeboletos","players_till_game","winnerLength","winners","onBla","_callee","event","regenerator_default","a","wrap","_context","prev","next","preventDefault","_this","setState","stop","onSubmit","_callee2","accounts","_context2","getAccounts","sent","methods","enter","send","from","location","reload","onClick","_callee3","_context3","selectWinner","get_players","call","Tikets_till_game","get_balance","get_price","name","totalSupply","get_winners_length","get_winners","this","_this2","react_default","createElement","utils","fromWei","onChange","target","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+WCCV,oBAAnBC,OAAOC,WAChBC,QAAQC,MAAM,qCACdC,MAAM,oDACNA,MAAM,wCACNA,MAAM,mDAER,IAEeC,EAFD,IAAIC,IAAKN,OAAOK,KAAKE,iBCDpBC,EAAA,IAAIH,EAAKI,IAAIC,SAASC,KAAKC,MAD1C,8yJAHgB,8CCoKDC,6MA7JXC,MAAQ,CACNC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,MAAM,GACNC,QAAS,GACTC,MAAO,GACPC,gBAAgB,GAChBC,kBAAmB,GACnBC,aAAa,GACbC,QAAQ,MA6BRC,4CAAQ,SAAAC,EAAOC,GAAP,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACFN,EAAMO,iBACNC,EAAKC,SAAS,CAAEjB,QAAS,qEAFvB,wBAAAY,EAAAM,SAAAX,8DAORY,+CAAW,SAAAC,EAAOZ,GAAP,IAAAa,EAAA,OAAAZ,EAAAC,EAAAC,KAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,cACTN,EAAMO,iBADGO,EAAAR,KAAA,EAGgB5B,EAAKI,IAAIiC,cAHzB,cAGDF,EAHCC,EAAAE,KAKPR,EAAKC,SAAS,CAAEjB,QAAS,sCALlBsB,EAAAR,KAAA,EAODzB,EAAQoC,QAAQC,MAAMV,EAAKrB,MAAMI,OACpC4B,KAAK,CACRC,KAAMP,EAAS,GACftB,MAAQiB,EAAKrB,MAAMM,MAAQe,EAAKrB,MAAMI,QAV/B,OAaTiB,EAAKC,SAAS,CAAEjB,QAAS,gBAGrBgB,EAAKrB,MAAMS,aAAe,GAC5BY,EAAKC,SAAS,CAAEjB,QAAS,8BAGzBnB,OAAOgD,SAASC,SApBT,wBAAAR,EAAAJ,SAAAE,8DAwBXW,6BAAU,SAAAC,IAAA,IAAAX,EAAA,OAAAZ,EAAAC,EAAAC,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EAEe5B,EAAKI,IAAIiC,cAFxB,cAEFF,EAFEY,EAAAT,KAIRR,EAAKC,SAAS,CAAEjB,QAAS,uCAJjBiC,EAAAnB,KAAA,EAKFzB,EAAQoC,QAAQS,eAAeP,KAAK,CACxCC,KAAMP,EAAS,KANT,OASRL,EAAKC,SAAS,CAAEjB,QAAS,8BATjB,wBAAAiC,EAAAf,SAAAc,0NApDFpC,EAAU,sDACMP,EAAQoC,QAAQU,cAAcC,qBAA9CvC,kBAC0BR,EAAQoC,QAAQY,mBAAmBD,qBAA7DjC,kBACgBd,EAAQoC,QAAQa,cAAcF,qBAA9CtC,mBACcT,EAAQoC,QAAQc,YAAYH,sBAA1CnC,mBACiBZ,EAAQoC,QAAQe,OAAOJ,uCAC1B/C,EAAQoC,QAAQgB,cAAcL,uCACvB/C,EAAQoC,QAAQiB,qBAAqBN,sBAA1DhC,mBAEgBf,EAAQoC,QAAQkB,YAAYC,KAAKjD,MAAMS,cAAcgC,eAArE/B,SASNuC,KAAK3B,SAAS,CAAErB,UAASC,UAASC,UAASG,QAAOE,oBAAmBC,eAAcC,gJA8ChF,IAAAwC,EAAAD,KAIP,OAEEE,EAAApC,EAAAqC,cAAA,WAEED,EAAApC,EAAAqC,cAAA,6BAGAD,EAAApC,EAAAqC,cAAA,0EACAD,EAAApC,EAAAqC,cAAA,iDAAyCH,KAAKjD,MAAMQ,mBACpD2C,EAAApC,EAAAqC,cAAA,mCAA2BH,KAAKjD,MAAME,SACtCiD,EAAApC,EAAAqC,cAAA,oBAEa7D,EAAK8D,MAAMC,QAAQL,KAAKjD,MAAMG,QAAS,SAAS,EAF7D,WAGIgD,EAAApC,EAAAqC,cAAA,kCACuB7D,EAAK8D,MAAMC,QAAQL,KAAKjD,MAAMM,OADrD,WAIJ6C,EAAApC,EAAAqC,cAAA,WACED,EAAApC,EAAAqC,cAAA,QAAM5B,SAAUyB,KAAKtC,OACnBwC,EAAApC,EAAAqC,cAAA,WAAKD,EAAApC,EAAAqC,cAAA,iDACLD,EAAApC,EAAAqC,cAAA,SACEhD,MAAO6C,KAAKjD,MAAMI,MAClBmD,SAAW,SAAA1C,GAAK,OAAIqC,EAAK5B,SAAS,CAAClB,MAAOS,EAAM2C,OAAOpD,cAM7D+C,EAAApC,EAAAqC,cAAA,WACED,EAAApC,EAAAqC,cAAA,QAAM5B,SAAUyB,KAAKzB,UACnB2B,EAAApC,EAAAqC,cAAA,qCACAD,EAAApC,EAAAqC,cAAA,WACAD,EAAApC,EAAAqC,cAAA,kCADA,KACkCD,EAAApC,EAAAqC,cAAA,uBAClCD,EAAApC,EAAAqC,cAAA,SACAhD,MAASb,EAAK8D,MAAMC,QAAQL,KAAKjD,MAAMI,OAAQ6C,KAAKjD,MAAMM,MAC1DiD,SAAU,SAAA1C,GAAK,OAAIqC,EAAK5B,SAAS,CAAClB,MAAOS,EAAM2C,OAAOpD,WAEtD+C,EAAApC,EAAAqC,cAAA,WACAD,EAAApC,EAAAqC,cAAA,UAAKH,KAAKjD,MAAMK,WAI5B8C,EAAApC,EAAAqC,cAAA,WACAD,EAAApC,EAAAqC,cAAA,yBACAD,EAAApC,EAAAqC,cAAA,UAAKH,KAAKjD,MAAMU,SAChByC,EAAApC,EAAAqC,cAAA,0BAGAD,EAAApC,EAAAqC,cAAA,WACAD,EAAApC,EAAAqC,cAAA,mCACAD,EAAApC,EAAAqC,cAAA,WACAD,EAAApC,EAAAqC,cAAA,+BACAD,EAAApC,EAAAqC,cAAA,uFACAD,EAAApC,EAAAqC,cAAA,qFACAD,EAAApC,EAAAqC,cAAA,kIACAD,EAAApC,EAAAqC,cAAA,8HACAD,EAAApC,EAAAqC,cAAA,mFACAD,EAAApC,EAAAqC,cAAA,gHACAD,EAAApC,EAAAqC,cAAA,4FACAD,EAAApC,EAAAqC,cAAA,4IACAD,EAAApC,EAAAqC,cAAA,+IACAD,EAAApC,EAAAqC,cAAA,yJACAD,EAAApC,EAAAqC,cAAA,WACAD,EAAApC,EAAAqC,cAAA,mBAvJkBK,aCKEC,QACW,cAA7BxE,OAAOgD,SAASyB,UAEe,UAA7BzE,OAAOgD,SAASyB,UAEhBzE,OAAOgD,SAASyB,SAASC,MACvB,kECXNC,IAASC,OAAOX,EAAApC,EAAAqC,cAACW,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.473ec38d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import Web3 from 'web3';\r\nif (typeof window.ethereum == 'undefined') {\r\n  console.error('No Ethereum wallet provider found')\r\n  alert('This application requires MetaMask web extension')\r\n  alert('Please install MetaMask to continue!')\r\n  alert('You can download it from: https://metamask.io/')\r\n}\r\nconst web3 =  new Web3(window.web3.currentProvider);\r\n\r\nexport default web3;\r\n","import web3 from './web3';\r\n\r\nconst address = '0xa9353Fd38B92e136FcA4849dB5CF1894c693E79A';\r\n\r\nconst abi =\r\n'[{\"constant\":true,\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_winners_length\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"get_winners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFromContract\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"deboletos\",\"type\":\"uint256\"}],\"name\":\"get_costo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"select_Winner2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressIndexes\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deleteAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"arrayStructs\",\"outputs\":[{\"name\":\"_val\",\"type\":\"uint256\"},{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"exists\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Tikets_till_game\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players_till_raise\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"deboletos\",\"type\":\"uint256\"}],\"name\":\"enter\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_players\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]'// export default new web3.eth.Contract(abi, address);\r\nexport default new web3.eth.Contract(JSON.parse(abi), address);\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\n\n\nclass App extends Component {\n\n    state = {\n      manager: '',\n      players: '',\n      balance: '',\n      value:'',\n      message: '',\n      price: '',\n      numerodeboletos:'',\n      players_till_game: '',\n      winnerLength:'',\n      winners:''\n      // winners2:'',\n      // winners3:'',\n      // winners4:'',\n\n    };\n\n    async  componentDidMount() {\n        const manager = '0xF8CcedC0F4298BEa79aEa0Fca3178d84C4d48338';\n        const players = await lottery.methods.get_players().call();\n        const players_till_game = await lottery.methods.Tikets_till_game().call();\n        const balance = await lottery.methods.get_balance().call();\n        const price = await lottery.methods.get_price().call();\n        const coinName = await lottery.methods.name().call();\n        const coins = await lottery.methods.totalSupply().call();\n        const winnerLength = await lottery.methods.get_winners_length().call();\n\n        const winners = await lottery.methods.get_winners(this.state.winnerLength).call();\n\n        // const winners2 = await lottery.methods.get_winners(4).call();\n        // const winners3 = await lottery.methods.get_winners(3).call();\n        // const winners4 = await lottery.methods.get_winners(2).call();\n\n        // const balance = await web3.eth.get_balance(lottery.options.address);\n\n\n        this.setState({ manager, players, balance, price, players_till_game, winnerLength, winners});\n      }\n\n      onBla = async (event) => {\n            event.preventDefault();\n            this.setState({ message: 'Remember to use your Metamask extension to get your Lotto Coins!'});\n\n          };\n\n\n      onSubmit = async (event) => {\n        event.preventDefault();\n\n          const accounts = await web3.eth.getAccounts();\n\n          this.setState({ message: 'Waiting on transaction success...'});\n\n          await lottery.methods.enter(this.state.value)\n            .send({\n          from: accounts[0],\n          value: (this.state.price)*(this.state.value)\n        });\n\n        this.setState({ message: 'You are in!'});\n\n\n        if (this.state.winnerLength > 50){\n          this.setState({ message: 'A winner has been picked!'});\n\n        }else{\n          window.location.reload();\n        }\n      };\n\n      onClick = async () => {\n\n        const accounts = await web3.eth.getAccounts();\n\n        this.setState({ message: 'Waiting on transaction successs...'});\n        await lottery.methods.selectWinner().send({\n          from: accounts[0]\n\n        });\n        this.setState({ message: 'A winner has been picked!'});\n      };\n\n  render() {\n\n\n\n    return (\n\n      <div>\n\n        <h1>\n                Forever Lottery\n        </h1>\n        <h3> Contract Addres: 0xF8CcedC0F4298BEa79aEa0Fca3178d84C4d48338</h3>\n        <h3> Tickets remaining until next draw: {this.state.players_till_game}</h3>\n        <h3> Tickets sold so far: {this.state.players}</h3>\n        <p>\n\n            To win: {web3.utils.fromWei(this.state.balance, 'ether')/2} ether!</p>\n            <p>\n            Current ticket price: {web3.utils.fromWei(this.state.price)} ether!\n\n        </p>\n        <hr />\n          <form onSubmit={this.onBla}>\n            <div><h4>How many tickets will you buy today?\n            <input\n              value={this.state.value}\n              onChange= {event => this.setState({value: event.target.value}) }\n            /></h4>\n            </div>\n\n        </form>\n\n        <hr />\n          <form onSubmit={this.onSubmit}>\n            <h4>Ready to try your luck?</h4>\n            <div>\n            <label> Prepare to send:</label>  <button>Enter</button>\n            <input\n            value = {web3.utils.fromWei(this.state.value)*(this.state.price)}\n            onChange={event => this.setState({value: event.target.value})}\n            />\n            <hr/>\n            <h2>{this.state.message}</h2>\n            </div>\n\n        </form>\n< hr/>\n<h4>Last Winner</h4>\n<h3>{this.state.winners}</h3>\n<h4>Past Winners</h4>\n\n\n<hr/>\n<h2>NEVER STOP PLAYING :)</h2>\n<hr/>\n<h3>How does it work?</h3>\n<li>Buy a ticket by sending the amount of ether stated on the 'enter' button.</li>\n<li>The tickets you buy will be sent to the Metamask account you paid with.</li>\n<li>In order to see your tickets follow the Metamask instructions to add tokens. Use the \"contract address\" to add them.</li>\n<li>The tickets are acctual Tokens called LottoCoins built on ERC20Interface so you can send them to other accounts.</li>\n<li>Whoever owns the ticket owns the right to participate in the lottery.</li>\n<li>The tickets never expire so as long as you hold them they will participate in the ongoing raffles.</li>\n<li>Every time 50 tickets are sold the contract will automatically run the raffle.</li>\n<li>The contract holds 45% of the paid tickets in orther to increase the next pot, which means that the pot is forever increasing.</li>\n<li>Every time 10 tikets are sold the ticket price will rise 0.0001 ethers so make sure to buy as many tickets in advance as you can.</li>\n<li>This lottery has no owner and is automatic. It will keep on going without human interference for as long as the ethereum blockchain exists.</li>\n<hr/>\n<hr/>\n</div>\n    );\n\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Web3Provider } from 'react-web3';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}