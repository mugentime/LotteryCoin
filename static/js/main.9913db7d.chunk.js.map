{"version":3,"sources":["logo.svg","web3.js","lottery.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","window","ethereum","console","error","alert","web3","Web3","currentProvider","lottery","eth","Contract","JSON","parse","require","App","state","manager","players","balance","value","message","price","numerodeboletos","players_till_game","winnerLength","winners0","winners1","winners2","winners3","winners4","allwinners","random","onBla","_callee","event","regenerator_default","a","wrap","_context","prev","next","preventDefault","methods","select_Random_player","call","_this","setState","stop","onSubmit","_callee2","accounts","_context2","getAccounts","sent","setTimeout","location","reload","enter","send","from","onClick","_callee3","_context3","t0","get_prize3","t1","t2","prize0","selectWinner","t3","t4","t5","get_players","tickets_Till_Game","getBalance","options","address","get_price","name","totalSupply","get_winners_length","get_winner0","get_winner1","get_winner2","get_winner3","get_winner4","winners","this","_this2","react_default","createElement","length","utils","fromWei","toString","onChange","target","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9913db7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import Web3 from 'web3';\r\n\r\n\r\n\r\n\r\nif (typeof window.ethereum == 'undefined') {\r\n  console.error('No Ethereum wallet provider found')\r\n  alert('This application requires MetaMask web extension')\r\n  alert('Please install MetaMask to continue!')\r\n  alert('You can download it from: https://metamask.io/')\r\n}\r\nconst web3 =  new Web3(window.web3.currentProvider);\r\n// window.web3 = new Web3(window.web3.currentProvider);\r\n\r\nexport default web3;\r\n","import web3 from './web3';\r\n\r\nconst address = '0x38b1287bC70EfC12c91f9Ba012763A7bbC286C01';\r\n\r\nconst abi =\r\n\r\n'[{\"constant\":true,\"inputs\":[],\"name\":\"get_winner0\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_winners_length\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"get_winners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_winner2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFromContract\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_prize4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"deboletos\",\"type\":\"uint256\"}],\"name\":\"get_costo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_prize1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"get_prize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_winner1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_prize3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressIndexes\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_winner3\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deleteAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"arrayStructs\",\"outputs\":[{\"name\":\"_val\",\"type\":\"uint256\"},{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"exists\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marco\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players_till_raise\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_prize2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JC\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"deboletos\",\"type\":\"uint256\"}],\"name\":\"enter\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_prize0\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_winner4\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prize_list\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"select_Random_player\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_players\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tickets_Till_Game\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]'\r\n\r\n\r\nexport default new web3.eth.Contract(JSON.parse(abi), address);\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\nimport { Router, browserHistory, Route, Link } from 'react-router';\nconst Web3 = require(\"web3\");\n\nclass App extends Component {\n\n\n\n    state = {\n      manager: '',\n      players: [],\n      balance: '',\n      value:'',\n      message: '',\n      price: '',\n      numerodeboletos:'',\n      players_till_game:[],\n      winnerLength:'',\n\n      winners0:'',\n      winners1:'',\n      winners2:'',\n      winners3:'',\n      winners4:'',\n\n      // prize0:'',\n      // prize1:'',\n      // prize2:'',\n      // prize3:'',\n      // prize4:'',\n\n\n      allwinners:[],\n      random:[],\n    };\n\n    async  componentDidMount() {\n\n        const web3 = new Web3(window.web3.currentProvider);\n        const manager = '0x7f65aE15bb752638c647F2E5cC6AABC5FAE8b01A ';\n        const players = await lottery.methods.get_players().call();\n        const players_till_game = await lottery.methods.tickets_Till_Game().call();\n        const balance = await web3.eth.getBalance(lottery.options.address);\n        const price = await lottery.methods.get_price().call();\n        const coinName = await lottery.methods.name().call();\n        const coins = await lottery.methods.totalSupply().call();\n        const winnerLength = await lottery.methods.get_winners_length().call();\n\n        const winners0 = await lottery.methods.get_winner0().call();\n        const winners1 =await lottery.methods.get_winner1().call();\n        const winners2 =await lottery.methods.get_winner2().call();\n        const winners3 =await lottery.methods.get_winner3().call();\n        const winners4 =await lottery.methods.get_winner4().call();\n\n        // const prize0= 0;\n        //\n        // const prize1= 0;\n        // const prize2= 0;\n        //\n        // const prize3 = 0;\n        // const prize4= 0;\n\n        // const prize4 =await lottery.methods.get_prize4().call();\n\n\n        const allwinners = await lottery.methods.winners([]).call();\n\n\n        const random = await lottery.methods.select_Random_player().call();\n\n        // const balance = await web3.eth.get_balance(lottery.options.address);\n\n\n        this.setState({ manager, players, balance, price, players_till_game, winnerLength,\n           winners0, winners1, winners2, winners3, winners4,\n           // prize0, prize1, prize2, prize3, prize4,\n          allwinners, random\n         });\n\n\n      }\n      onBla = async (event) => {\n\n\n            event.preventDefault();\n            await lottery.methods.select_Random_player().call();\n            this.setState({ message: 'Remember to use your Metamask extension to get your Lotto Coins!'});\n\n          };\n\n\n        onSubmit = async (event) => {\n          event.preventDefault();\n\n          const accounts = await web3.eth.getAccounts();\n\n          const random = await lottery.methods.select_Random_player().call();\n          this.setState({ message: 'Waiting on transaction successs...'});\n\n          setTimeout(function (){window.location.reload()}, 40000);\n          await lottery.methods.enter(this.state.value)\n          .send({\n                from: accounts[0],\n                value: (this.state.price)*(this.state.value)}\n);\n                this.setState({ message: 'You are in!'});\n                window.location.reload()\n                };\n\n      onClick = async () => {\n        this.setState({prize0: await lottery.methods.get_prize3().call()});\n        const accounts = await web3.eth.getAccounts();\n\n        this.setState({ message: 'Waiting on transaction successs...'});\n        await lottery.methods.selectWinner().send({\n          from: accounts[0]\n\n\n        });\n        this.setState({ message: 'A winner has been picked!'});\n        this.setState({prize0: await lottery.methods.get_prize3().call()});\n      };\n\n  render () {\n\n    return (\n      <div>\n\n              <ol>  <h1>Forever Lottery</h1> </ol>\n <ol>  <h3>Collective  Capitalization</h3></ol>\n <ol>  <h4>Buy once play forever</h4></ol>\n  <ol>  <h3> Contract Address:</h3> <h3>{this.state.manager}</h3></ol>\n    <li> Use this address to add your LottoCoins to your Metamask account. Just follow the 'add Tokens' instructions!</li>\n  <ol>  <h3> Tickets remaining until next draw:{' '} {50-this.state.players_till_game.length} </h3></ol>\n    <li>Every  time 50 tickets are sold the contract will pick a random winner! </li>\n  <ol>  <h3> Tickets sold so far: {' '}{this.state.players.length}</h3></ol>\n    <li>The tickets are called LottoCoins and are fully functional Tokens so you can use them as any other ERC20 token!</li>\n  <ol>  <h3> Accumulated pot: {web3.utils.fromWei(this.state.balance.toString(), 'ether')} ether! </h3></ol>\n    <li>When 50 tickets are sold 45% of the pot will be paid to a randomly selected ticket,\n    10% of the pot will be payed to the creator</li>\n  <ol>  45% will be saved for the next pot making it forever increasing! </ol>\n  <ol>  <h3> Current ticket price: {web3.utils.fromWei(this.state.price.toString())} ether! </h3></ol>\n    <li>The ticket price will rise 0.0001 ethers every time 10 tickets are sold.</li>\n\n    <hr />\n          <form onSubmit={this.onBla}>\n            <div>\n\n            <h4>How many tickets will you buy today?\n            <input\n              value={this.state.value}\n              onChange= {event => this.setState({value: event.target.value}) }\n            /></h4>\n            </div>\n\n        </form>\n\n        <hr />\n\n          <form onSubmit={this.onSubmit}>\n         <h4>Ready to try your luck?</h4>\n            <div>\n           <label> Prepare to send:  </label>\n\n            <input\n            value = {web3.utils.fromWei(this.state.value)*(this.state.price)}\n            onChange={event => this.setState({value: event.target.value})  }\n\n            /> <button>Enter</button>\n            <hr/>\n\n\n\n            <h2>{this.state.message}</h2>\n\n            </div>\n\n        </form>\n< hr/>\n<ol>\n<h4>Last Winner</h4>\n<p>{this.state.winners0} </p>\n\n<h4>Past Winners</h4>\n<p>{this.state.winners1}</p>\n\n<p>{this.state.winners2}</p>\n\n<p>{this.state.winners3}</p>\n\n<p>\n\n\n                          </p>\n\n\n<h4>Winner count: {this.state.winnerLength.length}</h4>\n\n</ol>\n<hr/>\n<h2>NEVER STOP PLAYING :)</h2>\n<hr/>\n<ol><h3>How does it work?</h3>\n\n<li>Buy a ticket by sending the amount of ether stated on the 'enter' button.</li>\n<li>The tickets you buy will be sent to the Metamask account you paid with.</li>\n<li>In order to see your tickets follow the Metamask instructions to add tokens. Use the \"contract address\" to add them.</li>\n<li>The tickets are actual Tokens called LottoCoins built on ERC20Interface so you can send them to other accounts.</li>\n<li>Whoever owns the ticket owns the right to participate in the lottery.</li>\n<li>The tickets never expire so as long as you hold them they will participate in the ongoing raffles.</li>\n<li>Every time 50 tickets are sold the contract will automatically run the raffle.</li>\n<li>The contract holds 45% of the paid tickets in orther to increase the next pot, which means that the pot is forever increasing.</li>\n<li>Every time 10 tickets are sold the ticket price will rise 0.0001 ethers so make sure to buy as many tickets in advance as you can.</li>\n<li>This lottery has no owner and is automatic. It will keep on going without human interference for as long as the ethereum blockchain exists.</li>\n</ol>\n<hr/>\n<hr/>\n\n</div>\n    );\n\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Web3Provider } from 'react-web3';\n\nsetTimeout(function (){\nReactDOM.render(<App />, document.getElementById('root'));\n}, 1000);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}